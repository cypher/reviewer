# Quick overview of the options configuration for command-line tools.
# It can be handy to leave this section in your configuration file as a convenient reference.
#
# <command_key>:                // ex. 'rubocop', 'bundler-audit', etc.
#  disabled: true               // Optional. Tools are enabled by default
#  name:                        // Optional. Will use the `command_key` if name isn't provided.
#  description:                 // Optional. Serves as a handy reminder for the purpose of the command.
#  tags: [ruby, dependencies]   // Optional. Lets you run commands tagged with the same word.
#  links:
#    home:                      // Optional. A link to the home page for the tool.
#    install:                   // Optional. A link to the installation instructions for the tool.
#    usage:                     // Optional. A link to the general usage instructions for the tool.
#    ignore_syntax:             // Optional. A link to the syntax for ignoring some rules for small sections of code.
#    disable_syntax:            // Optional. A link to the syntax for disabling entire rules for a tool.
#  commands:
#    install:                   // Optional. Command to run to install the tool.
#    prepare:                   // Optional. Command to run prior to the review phase. ex. 'bundle exec bundle-audit update'
#    review:                    // Required. The only truly required field because this is the whole point.
#    format:                    // Optional. Command to auto-update rule violations when possible.
#    serve:                     // Optional. Command to start a local server with reports generated by the tool.
#    generate:                  // Optional. Command to generate artifacts from the tool for viewing separately.
#    max_exit_status:           // Optional, defaults to 0. Some tools like Yarn Audit essentially won't return less than a 3. This specifies the threshold that's still considered passing.
#  files:
#    flag:                      // Optional, defaults to '' (empty string). The name of the flag used to pass subsets of files to the command.
#    separator:                 // Optional, defaults to ' ' (single space). The character used to separate lists of files and directories.
#  env:                         // Optional. A way to specify necessary environment variables for the tools commands. The key is the variable name, and the value is, well, the value.
#    example_one: value         //           - The names will automatically be capitalized, so you can freely use lower-case here.
#    example_one: value         //           - Reviewer is smart enough to handle string values with spaces and automatically quote them.
#  flags:                       // Optional. A way to specify flags *only for the review command*. The key is the flag name, and the value is, well, the value.
#    example_one: value         //           - Reviewer is smart enough to handle single-letter (-f) and multi-letter (--format) flags.
#    example_two: value         //           - It's highly-recommended to use the longer-name format for flags when possible to serve as self-documentation.
#    example_three:             //           - If the flag doesn't need or have a value, leaving it blank will translate it to a flag without a value.
#  other:                       // Optional. A way to specify paramters that don't follow the standard flags conventions.
#    description: value         //           - The key (ex. 'description') only serves as documentation and won't be used. Instead, the raw value will be applied


# In practice, a configuration block would look something like the block below.
tool-name-key:
  disabled: true
  name: Tool
  description: A tool that finds issues and fixes code.
  tags: [syntax, security]
  links:
    home: https://example.com
    install: https://example.com/install
    ignore_syntax: https://example.com/ignore
    disable_syntax: https://example.com/disable
  commands:
    install: 'bundle install tool'
    prepare: 'bundle exec tool update'
    review: 'bundle exec tool'
    format: 'bundle exec tool --format'
    max_exit_status: 1
  files:
    flag: 'files'
    separator: ','
  env:
    report: false
  flags:
    format: json
    verbose:
  other:
    example: '--example | other'
